-- This file is autogenerated from regen-schema.ts

CREATE TABLE IF NOT EXISTS old_posts (
  created_time timestamp with time zone DEFAULT now(),
  creator_id text,
  data jsonb NOT NULL,
  group_id text,
  id text PRIMARY KEY DEFAULT uuid_generate_v4() NOT NULL,
  visibility text
);

-- Foreign Keys
ALTER TABLE old_posts ADD CONSTRAINT public_old_posts_group_id_fkey FOREIGN KEY (group_id) REFERENCES groups(id) ON UPDATE CASCADE ON DELETE CASCADE;

-- Triggers
CREATE TRIGGER post_populate BEFORE INSERT OR UPDATE ON public.old_posts FOR EACH ROW EXECUTE FUNCTION post_populate_cols();

-- Functions
CREATE OR REPLACE FUNCTION public.post_populate_cols()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$ begin 
    if new.data is not null then 
        new.visibility := (new.data)->>'visibility';
        new.group_id := (new.data)->>'groupId';
        new.creator_id := (new.data)->>'creatorId';
    end if;
    return new;
end $function$
;

-- Row Level Security
ALTER TABLE old_posts ENABLE ROW LEVEL SECURITY;
-- Policies
DROP POLICY IF EXISTS "public read" ON old_posts;
CREATE POLICY "public read" ON old_posts FOR SELECT USING (true) ;

-- Indexes
DROP INDEX IF EXISTS posts_pkey;
CREATE UNIQUE INDEX posts_pkey ON public.old_posts USING btree (id);

