-- This file is autogenerated from regen-schema.ts
create table if not exists
  groups (
    id text default extensions.uuid_generate_v4 () not null,
    data jsonb not null,
    privacy_status text,
    slug text not null,
    name text not null,
    creator_id text,
    name_fts tsvector generated always as (to_tsvector('english'::regconfig, name)) stored,
    total_members numeric default 0,
    importance_score numeric default 0
  );

-- Triggers
create trigger group_populate before insert
or
update on public.groups for each row
execute function group_populate_cols ();

-- Functions
create
or replace function public.group_populate_cols () returns trigger language plpgsql as $function$ begin 
    if new.data is not null then 
    new.privacy_status := (new.data)->>'privacyStatus';
    new.slug := (new.data)->>'slug';
    new.name := (new.data)->>'name';
    new.creator_id := (new.data)->>'creatorId';
    end if;
    return new;
end $function$;

-- Policies
alter table groups enable row level security;

drop policy if exists "public read" on groups;

create policy "public read" on groups for
select
  using (true);

-- Indexes
drop index if exists groups_pkey;

create unique index groups_pkey on public.groups using btree (id);

drop index if exists group_slug;

create index group_slug on public.groups using btree (slug);

drop index if exists privacy_status_idx;

create index privacy_status_idx on public.groups using btree (privacy_status);

drop index if exists total_members;

create index total_members on public.groups using btree (total_members desc);
